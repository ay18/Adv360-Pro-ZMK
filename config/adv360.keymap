#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &kp N1  &kp N2     &kp N3    &kp N4    &kp N5  &mo 1                                                          &mo 2        &kp N6  &kp N7    &kp N8     &kp N9     &kp N0    &none
&kp TAB    &kp Q   &kp W      &kp E     &kp R     &kp T   &none                                                          &none        &kp Y   &kp U     &kp I      &kp O      &kp P     &kp BSLH
&kp ESC    &kp A   &kp S      &kp D     &kp F     &kp G   &none            &none    &none      &none          &none      &none        &kp H   &kp J     &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V     &kp B                             &none      &kp PAGE_UP                            &kp N   &kp M     &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT
&none      &none   &kp LCTRL  &kp LALT  &kp LCMD          &lt 3 BACKSPACE  &kp DEL  &none      &kp PAGE_DOWN  &kp ENTER  &lt 3 SPACE          &kp RCMD  &kp RALT   &kp RCTRL  &none     &none
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 0                                      &mo 2   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans           &none  &none     &none         &none      &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader      &none  &none     &none         &none      &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &none            &none  &none     &none         &none      &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                    &none  &none     &kp UP_ARROW  &none      &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG         &kp LEFT  &kp DOWN      &kp RIGHT  &none  &none
            >;
        };

        something_new {
            bindings = <
&trans  &trans  &trans     &trans  &trans  &trans  &trans                                      &trans  &trans                &trans                 &trans            &trans             &trans  &trans
&trans  &trans  &trans     &trans  &trans  &trans  &trans                                      &trans  &trans                &kp EQUAL              &kp MINUS         &trans             &trans  &trans
&trans  &trans  &kp GRAVE  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans
&trans  &trans  &trans     &trans  &trans  &trans                  &trans      &trans                  &trans                &trans                 &kp UP_ARROW      &kp QUESTION       &trans  &trans
&trans  &trans  &trans     &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                        &kp LEFT               &kp DOWN          &kp RIGHT          &trans  &trans
            >;
        };
    };
};
